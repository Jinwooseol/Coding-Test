def solution(triangle):
    
    Tree = []   # 삼각형의 각 자리까지 이어진 숫자의 합에 대한 최대값을 저장하는 리스트
    
    Tree.append([triangle[0][0]])           # 가장 윗부분은 꼭대기의 값으로 설정
    
    for i in range(1, len(triangle)):       # 삼각형을 꼭대기에서 한층씩 내려가면서 각 자리에 대한 경로 최대값을 계산
        floor = []
        for j in range(len(triangle[i])):
            if j == 0:                      # 가장 왼쪽 자리라면 위쪽 층의 가장 왼쪽 수에 자신의 수를 더함
                floor.append(Tree[i-1][0] + triangle[i][0])
            elif j == (len(triangle[i]) - 1): # 가장 오른쪽 자리라면 위쪽 층의 가장 오른쪽 수에 자신의 수를 더함
                floor.append(Tree[i-1][j-1] + triangle[i][j])
            else:                           
                # 나머지 자리에 대해서는 위쪽 층의 대각선 왼쪽 값과 오른쪽 값을 비교하여 큰 값에 자신의 수를 더함
                floor.append(max(Tree[i-1][j-1], Tree[i-1][j]) + triangle[i][j])
        
        Tree.append(floor)  # 각 층에 대한 최적 결과들을 Tree에 저장
    
    answer = max(Tree[len(triangle)-1]) # Tree의 마지막 층에서 최대값을 결과값으로 저장
    return answer
